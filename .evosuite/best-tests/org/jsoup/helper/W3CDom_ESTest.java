/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 07 22:03:57 GMT 2018
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl;
import java.util.Iterator;
import javax.xml.parsers.DocumentBuilderFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.Node;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      doReturn("xmlns:", ":").when(element0).tagName();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("xmlns:", "xmlns:").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      doReturn(":", (String) null).when(element0).tagName();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      String string0 = "hSM";
      Attribute attribute0 = mock(Attribute.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(attribute0).getKey();
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      doReturn(attribute0).when(iterator0).next();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("hSM", "Lhc<ZT41").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).location();
      doReturn((Element) null, (Element) null).when(document0).child(anyInt());
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      w3CDom0.convert(document0, document1);
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      w3CDom0.asString(document1);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      w3CDom_W3CBuilder0.tail(node0, 1);
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      doReturn((String) null).when(element0).tagName();
      Document document2 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("xmlns:", "xmlns:").when(document2).location();
      doReturn(element0).when(document2).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      String string0 = "P1K]FYR*23Y2";
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      doReturn((Object) null).when(iterator0).next();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("P1K]FYR*23Y2", "Lhc<ZT41").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      String string0 = "P1K]FYR*23Y2";
      String string1 = "hSM";
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      doReturn("gwoFrDAg *=!Y_L;.w", (String) null).when(element0).tagName();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("hSM", "Lhc<ZT41").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      doReturn("", (String) null).when(element0).tagName();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      String string0 = "P1K]FYR*23Y2";
      String string1 = "hSM";
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      doReturn((String) null).when(element0).tagName();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("hSM", "Lhc<ZT41").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("kM$Qv]ryf!QE'U", (String) null).when(document0).location();
      doReturn((Element) null).when(document0).child(anyInt());
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      String string0 = w3CDom0.asString(document1);
      w3CDom0.asString(document1);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      Node node1 = mock(Node.class, new ViolatedAssumptionAnswer());
      w3CDom_W3CBuilder0.head(node1, (-3544));
      w3CDom_W3CBuilder0.head(node0, 357);
      Document document2 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", (String) null).when(document2).location();
      doReturn((Element) null).when(document2).child(anyInt());
      w3CDom0.convert(document2, document1);
      Node node2 = mock(Node.class, new ViolatedAssumptionAnswer());
      w3CDom_W3CBuilder0.tail(node2, 1);
      String string1 = w3CDom0.asString(document1);
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn((Attributes) null).when(element0).attributes();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("QROk~::ez'CdCG=", (String) null).when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn((Attributes) null).when(element0).attributes();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      DocumentBuilderFactoryImpl documentBuilderFactoryImpl0 = (DocumentBuilderFactoryImpl)w3CDom0.factory;
      w3CDom0.factory = (DocumentBuilderFactory) documentBuilderFactoryImpl0;
      Document document1 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(document1).location();
      doReturn((Element) null).when(document1).child(anyInt());
      org.w3c.dom.Document document2 = w3CDom0.fromJsoup(document1);
      w3CDom0.asString(document2);
      w3CDom0.factory = null;
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).location();
      doReturn((Element) null, (Element) null).when(document0).child(anyInt());
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      w3CDom0.convert(document0, document1);
      Document document2 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document2).location();
      doReturn((Element) null, (Element) null).when(document2).child(anyInt());
      W3CDom w3CDom1 = new W3CDom();
      org.w3c.dom.Document document3 = w3CDom1.fromJsoup(document2);
      w3CDom0.convert(document2, document3);
      DocumentBuilderFactoryImpl documentBuilderFactoryImpl0 = (DocumentBuilderFactoryImpl)w3CDom1.factory;
      w3CDom1.factory = (DocumentBuilderFactory) documentBuilderFactoryImpl0;
      w3CDom1.asString(document1);
      w3CDom0.asString(document3);
      Document document4 = null;
      // Undeclared exception!
      try { 
        w3CDom0.convert((Document) null, document1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(document0).location();
      doReturn((Element) null, (Element) null).when(document0).child(anyInt());
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      w3CDom0.convert(document0, document1);
      Document document2 = null;
      org.w3c.dom.Document document3 = null;
      w3CDom0.asString((org.w3c.dom.Document) null);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(document0).location();
      doReturn((Element) null).when(document0).child(anyInt());
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      w3CDom_W3CBuilder0.tail(node0, 477);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((org.w3c.dom.Document) null);
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      w3CDom_W3CBuilder0.head(node0, 835);
      W3CDom w3CDom0 = new W3CDom();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder((org.w3c.dom.Document) null);
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.asString((org.w3c.dom.Document) null);
      DocumentBuilderFactoryImpl documentBuilderFactoryImpl0 = (DocumentBuilderFactoryImpl)w3CDom0.factory;
      w3CDom0.factory = (DocumentBuilderFactory) documentBuilderFactoryImpl0;
      Document document0 = null;
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Attribute attribute0 = mock(Attribute.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(attribute0).getKey();
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      doReturn(attribute0).when(iterator0).next();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("xmlns:", "xmlns:").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      doReturn("xmlns:", "org.jsoup.helper.W3CDom$W3CBuilder", (String) null).when(element0).tagName();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("xmlns:", "xmlns:").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("wy}", "7y").when(document0).location();
      doReturn((Element) null).when(document0).child(anyInt());
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
      w3CDom_W3CBuilder0.head(node0, 1);
      Node node1 = mock(Node.class, new ViolatedAssumptionAnswer());
      DocumentBuilderFactoryImpl documentBuilderFactoryImpl0 = (DocumentBuilderFactoryImpl)w3CDom0.factory;
      w3CDom0.factory = (DocumentBuilderFactory) documentBuilderFactoryImpl0;
      w3CDom0.asString(document1);
      Node node2 = mock(Node.class, new ViolatedAssumptionAnswer());
      Node node3 = mock(Node.class, new ViolatedAssumptionAnswer());
      w3CDom_W3CBuilder0.head(node3, 146);
      w3CDom_W3CBuilder0.tail(node2, 2476);
      w3CDom_W3CBuilder0.head(node1, (-989));
      w3CDom0.asString(document1);
      Node node4 = mock(Node.class, new ViolatedAssumptionAnswer());
      w3CDom_W3CBuilder0.head(node4, (-989));
      Document document2 = mock(Document.class, new ViolatedAssumptionAnswer());
      Document document3 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>").when(document3).location();
      doReturn((Element) null).when(document3).child(anyInt());
      org.w3c.dom.Document document4 = w3CDom0.fromJsoup(document3);
      w3CDom0.asString(document4);
      Document document5 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>").when(document5).location();
      doReturn((Element) null).when(document5).child(anyInt());
      w3CDom0.convert(document5, document1);
      Node node5 = mock(Node.class, new ViolatedAssumptionAnswer());
      w3CDom_W3CBuilder0.tail(node5, 0);
      Document document6 = mock(Document.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      String string0 = "P1K]FYR*23Y2";
      String string1 = "hSM";
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0, (Attributes) null).when(element0).attributes();
      doReturn("gwoFrDAg *=!Y_L;.w", "hSM").when(element0).tagName();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("hSM", "Lhc<ZT41").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Iterator<Attribute> iterator0 = (Iterator<Attribute>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(attributes0).iterator();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(attributes0).when(element0).attributes();
      doReturn("", "").when(element0).tagName();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("").when(document0).location();
      doReturn(element0).when(document0).child(anyInt());
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Attributes attributes0 = mock(Attributes.class, new ViolatedAssumptionAnswer());
      Node node0 = mock(Node.class, new ViolatedAssumptionAnswer());
  }
}
